// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(uuid()) @db.Uuid
  celular      String?
  email        String    @unique
  tipoUsuario  String?
  password     String
  urlFoto      String?
  name         String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime? @updatedAt
  codigo       Int?      @default(autoincrement())
  numeroMultas Int?      @default(0)
  state        Boolean?  @default(true)
  Order        Order[]
}

model Product {
  id        String    @id @default(uuid()) @db.Uuid
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  models    Model[]
}

model Model {
  id            String      @id @default(uuid()) @db.Uuid
  name          String
  price         Int? //Precio de reventa
  normalPrice   Int? //Precio normal user whatsapp o final
  alliancePrice Int? //Precio para tiendas aliadas
  description   String?
  reference     Int?
  color         String?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime?   @updatedAt
  product       Product?    @relation(fields: [productId], references: [id])
  productId     String?     @db.Uuid
  stocks        Stock[]
  OrderItem     OrderItem[]
  images        Image[]
  isActive      Boolean?    @default(true)
  isRecommended Boolean?    @default(false)
}

model Image {
  id            String    @id @default(uuid()) @db.Uuid
  isPrimary     Boolean?  @default(false)
  isRecommended Boolean?  @default(false)
  url           String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime? @updatedAt
  Model         Model?    @relation(fields: [modelId], references: [id])
  modelId       String?   @db.Uuid
}

model Stock {
  id        String    @id @default(uuid()) @db.Uuid
  size      Int
  quantity  Int
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  Model     Model?    @relation(fields: [modelId], references: [id])
  modelId   String?   @db.Uuid
}

model Order {
  id          String      @id @default(uuid()) @db.Uuid
  codigoOrder Int?        @default(autoincrement())
  createdAt   DateTime    @default(now())
  updatedAt   DateTime?   @updatedAt
  user        User?       @relation(fields: [userId], references: [id])
  userId      String?     @db.Uuid
  orderItems  OrderItem[]
  total       Int?
  state       String?     @default("Creada") // Creada, Pago Enviado, Pago Confirmado ,Alistada,Pedido Entregado, CanceladaAdmin
  comments    String?
  paymentUrl  String?
  areReady    Boolean?    @default(false)
  typeOrder   String?     @default("Normal") // Normal, Curva
}

model OrderItem {
  id        String    @id @default(uuid()) @db.Uuid
  quantity  Int
  size      Int
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  Order     Order?    @relation(fields: [orderId], references: [id])
  orderId   String?   @db.Uuid
  model     Model?    @relation(fields: [modelId], references: [id])
  modelId   String?   @db.Uuid
}
